<?php
/*
 * 微信app支付
 * By: Phpstorm
 * Author: XiaoJie
 * Datetime: 2018/10/27 10:15
 */
namespace app\portal\controller;

use app\portal\model\OrderModel;
use cmf\controller\HomeBaseController;
use think\Cache;
use think\Config;
use think\Db;
use Yansongda\Pay\Pay;
use Yansongda\Pay\Log;

class WechatpayController extends HomeBaseController
{

    protected $config;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->config = [
            'appid' => Config::get('WX_APPID'), // APP APPID
            'app_id' => '', // 公众号 APPID
            'miniapp_id' => '', // 小程序 APPID
            'mch_id' => Config::get('WX_MCH_ID'),
            'key' => Config::get('WX_KEY'),
            'notify_url' => 'http://fqzy.w.bronet.cn/portal/wechatpay/notify',
            'cert_client' => './cert/apiclient_cert.pem', // optional，退款等情况时用到
            'cert_key' => './cert/apiclient_key.pem',// optional，退款等情况时用到
            'log' => [ // optional
                'file' => './logs/wechat.log',
                'level' => 'info', // 建议生产环境等级调整为 info，开发环境为 debug
                'type' => 'single', // optional, 可选 daily.
                'max_file' => 30, // optional, 当 type 为 daily 时有效，默认 30 天
            ],
            'http' => [ // optional
                'timeout' => 5.0,
                'connect_timeout' => 5.0,
                // 更多配置项请参考 [Guzzle](https://guzzle-cn.readthedocs.io/zh_CN/latest/request-options.html)
            ],
//            'mode' => 'hk', // optional, dev/hk;当为 `hk` 时，为香港 gateway。
        ];
    }


    public function pay($order_sn,$price)
    {
        $order = [
            'out_trade_no' => $order_sn,
            'body' => '飞签之音',
            'total_fee' => 0.01*100,
        ];
        $res = Pay::wechat($this->config)->app($order);
        $data = json_decode($res->getContent(),true);
        return $data;
    }

    public function notify()
    {
        $pay = Pay::wechat($this->config);
        try{
            $data = $pay->verify(); // 是的，验签就这么简单！
            $data = $data->all();
            $res = Db::name('order')->where('order_sn',$data['out_trade_no'])->data([
                'order_status' => 1,
                'pay_time' => date('Y-m-d H:i:s'),
                'transaction_id' => $data['transaction_id']
            ])->update();
        } catch (Exception $e) {
            Log::debug('Wechat notify', $e->getMessage());
        }
        if($res){
            return $pay->success()->send();// laravel 框架中请直接 `return $pay->success()`
        }
    }
}